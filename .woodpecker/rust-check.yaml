# .woodpecker/rust-check.yaml

# Defines when this pipeline should run.
# It triggers on pushes and pull requests to the 'dev' branch.
when:
  branch: dev
  event: pull_request

# Defines the sequence of steps in the pipeline.
# Steps run sequentially by default.
steps:
  # Step 2: Runs standard quality checks on the STABLE toolchain.
  - name: quality-checks
    # Pulls a Docker image that has a stable version of Rust pre-installed.
    image: rust@sha256:b18203be0f58e16fe47250bf98bbe83c61bbfa97a0f5a94cebf34605bb000137
    commands:
      - apk add --no-cache build-base musl-dev
      - rustup component add --toolchain stable-x86_64-unknown-linux-musl rustfmt
      - rustup component add --toolchain stable-x86_64-unknown-linux-musl clippy
      - rustc --version
      - cargo --version
      - cargo fmt --check
      - cargo clippy -- -D warnings

  # Step 3: Runs sanitizer tests on the NIGHTLY toolchain.
#  - name: sanitizer-checks
#    # Starts from the official Arch Linux base image.
#    image: archlinux@sha256:7beca11cc5203d0d7ee2e1202637f2600233b9e6195209f503d42ba356d414e3
#    commands:
#      - pacman-key --init
#      - pacman -Syu --needed --noconfirm git curl
#
      # Downloads and installs rustup in a non-interactive way.
      # The `-y` flag accepts all default options.
#      - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --profile minimal --default-toolchain nightly -y --no-modify-path
#
      # Adds the cargo bin directory to the current shell's PATH.
#      - export PATH="$HOME/.cargo/bin:$PATH"
#      - sed -i 's/channel = "stable"/channel = "nightly"/' rust-toolchain.toml
#
      # Sets the nightly toolchain as the default for this step.
#      - rustup default nightly
#
      # Verifies the installed toolchain version.
#      - rustc --version
#      - cargo --version
#
      # Sets the necessary flags and runs the tests with sanitizers.
#      - export RUSTFLAGS="-Zsanitizer=address"
#      - cargo +nightly test

  # Step 4
  - name: unit_and_integration_tests
    image: rust@sha256:b18203be0f58e16fe47250bf98bbe83c61bbfa97a0f5a94cebf34605bb000137
    commands:
      - cargo test

  # Step 5
  - name: cargo-fuzz test
    image: alpine@sha256:4bcff63911fcb4448bd4fdacec207030997caf25e9bea4045fa6c8c44de311d1
    commands:
      - apk add --no-cache curl
      - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --profile minimal --default-toolchain nightly -y --no-modify-path
      - export PATH="$HOME/.cargo/bin:$PATH"
      - rustup default nightly
      - rustc --version
      - cargo --version
      - cargo install cargo-fuzz
      - cargo fuzz run ​​--sanitizer none fuzz_parse_duration
      - cargo fuzz run ​​--sanitizer none fuzz_toml_parser
